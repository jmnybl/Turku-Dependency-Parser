# w(t) = word form of t
# l(t) = lemma of t
# c(t) = cluster of t
# m(t) = set of morphological features of t
# pi (t) = ith candidate part-of-speech tag for t
# p(t) = finally predicted part-of-speech tag of t
# d(t) = predicted dependency label of t
# Si = ith token in the stack
# Bi = ith token in the buffer
# S+10 = the word immediately following (in the input string) the word that is currently on top of the stack
# ld(t) = leftmost dependent of t
# rd(t) = rightmost dependent of t
# di = ith dependent of t (from left to right)
# hi = the ith previous transition
# ri (t) = a prefix of i characters in the word form of token t
# si (t) = a suffix of i characters in the word form of token t
# A = universal quantification
# e = is an element of

# 1-gram features
p(S1 )
p(S0 )
l(S1 )
l(S0 )
w(S1 )
w(S0 )
p(S+10 )
p(S+20 )
w(ld(S0 ))
w(ld(S1 ))

# 2-gram features
w(S1 )p(S0 )
p(S1 )w(S0 )
w(S0 )p(S0 )
w(S1 )p(S1 )
w(S1 )w(S0 )
l(S1 )p(S0 )
p(S1 )l(S0 )
w(S+20 )p(S+20 )
p(S1 )p(S0 )
w(S+10 )p(S+10 )
p(S0 )h0

# 3-gram features
Ax e {S-11 , S+11 , S-10 , S+10 } : p(S1 )p(S0 )p(x)
Ax e {S-21 , S+21 , S-20 , S+20 } : p(S1 )p(S0 )p(x)
Ax e {S-31 , S+31 , S-30 , S+30 } : p(S1 )p(S0 )p(x)
Ax e {S-11 , S+11 }, Ay e {S-10 , S+10 }, Az e {S0 , S0 } : p(x)p(y)w(z)
w(S+11 )w(S+20 )p(S0 )
w(S+21 )w(S+30 )p(S0 )
w(S+21 )w(S+10 )p(S1 )
w(S+31 )w(S+20 )p(S1 )
p(S+11 )w(S+20 )p(S0 )
p(S+21 )w(S+30 )p(S0 )
w(S+10 )p(S+21 )p(S0 )
w(S+20 )p(S+31 )p(S0 )
w(S+11 )w(S+21 )p(S0 )
w(S+21 )w(S+31 )p(S0 )
w(S+31 )w(S+41 )p(S0 )
w(S+10 )w(S+20 )p(S1 )
w(S+20 )w(S+30 )p(S1 )
w(S+30 )w(S+40 )p(S1 )
w(S+21 )w(S-11 )p(S0 )
w(S+31 )w(S-11 )p(S0 )
w(S+20 )w(S-10 )p(S1 )
w(S+30 )w(S-10 )p(S1 )
w(S-11 )w(S-21 )p(S0 )
w(S-21 )w(S-31 )p(S1 )
w(S-10 )w(S-20 )p(S1 )
w(S-20 )w(S-30 )p(S1 )
p(S+11 )p(S+21 )p(S0 )
p(S+21 )p(S+31 )p(S0 )
p(S+31 )p(S+41 )p(S0 )
p(S-11 )p(S-21 )p(S0 )
p(S-21 )p(S-31 )p(S0 )
p(S+10 )p(S+20 )p(S1 )
p(S+20 )p(S+30 )p(S1 )
p(S+30 )p(S+40 )p(S1 )
p(S-10 )p(S-20 )p(S1 )
p(S-20 )p(S-30 )p(S1 )
d(rd(S1 ))p(S1 )p(S0 )
p(S0 )p(S1 )d(ld(S1 ))
p(S0 )p(S1 )d(rd(S1 ))
w(S0 )p(S1 )w(rd(S1 ))
w(S1 )p(S0 )w(rd(S1 ))
l(S0 )p(S1 )l(rd(S1 ))
l(S1 )p(S0 )l(rd(S1 ))
p(S0 )p(d0 (S1 ))w(d1 (S1 ))
p(S0 )p(d0 (S1 ))p(d1 (S1 ))
p(S0 )p(S1 )p(ld(S2 ))
p(S0 )p(S1 )d(ld(S2 ))
p(S0 )p(S1 )p(S2 )
w(S0 )p(S0 )p(rd(S0 ))
p(rd(S0 ))d(rd(S0 ))p(S0 )
p(S0 )p(d0 (S0 ))p(d1 (S0 ))
p(S0 )h0 h1

# 4-gram features
Ax e {S-11 , S+11 }, Ay e {S-10 , S+10 } : p(S1 )p(S0 )p(x)p(y)
Ax e {S-21 , S+21 }, Ay e {S-20 , S+20 } : p(S1 )p(S0 )p(x)p(y)
Ax e {m0 (S1 ), ..., mn (S1 )}, Ay e {m0 (S1 ), ..., mn (S1 )} : p(S0 )p(S1 ) x y
w(S0 )w(S+10 )p(S1 )p(S0 )
p(S0 )p(d0 (S0 ))p(d1 (S0 ))p(d2 (S0 ))
p(S0 )d(d0 (S0 ))d(d1 (S0 ))d(d2 (S0 ))
p(S0 )p(d0 (S1 ))p(d1 (S1 ))p(d2 (S1 ))
p(S0 )d(d0 (S1 ))d(d1 (S1 ))d(d2 (S1 ))
p(S0 )h0 h1 h2

# 5-gram features
p(S0 )l(S0 )d(d0 (S0 ))d(d1 (S0 ))d(d2 (S0 ))
p(S0 )l(S0 )d(d0 (S1 ))d(d1 (S1 ))d(d2 (S1 ))
p(S0 )h0 h1 h2 h3

### TABLE 2 ###

# simulating table 2 features without joint system

# Features involving word prefixes and suffixes (why not to use morpho instead?)
# morpho features are included in manual features...

# some extra queue based features
w(B1 )p(B0 )
p(B1 )w(B0 )
w(B0 )p(B0 )
w(B1 )p(B1 )
w(B1 )w(B0 )
l(B1 )p(B0 )
p(B1 )l(B0 )


# Features involving tag score differences and ranks (these we don't have)
#pi (B0 )[s(p1 (B0 ))−s(pi (B0 ))]
#pi (B0 )pi (S0 )[s(p1 (B0 ))−s(pi (B0 ))] i
#pi (B0 )[s(p1 (B0 ))−s(pi (B0 ))]p(S0 )
#w(B0 )[s(p1 (B0 ))−s(pi (B0 ))]p(S0 )


